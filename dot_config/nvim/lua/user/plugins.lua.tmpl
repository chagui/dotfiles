local fn = vim.fn

-- Install packer if not found
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "gh:folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)

-- Reloads neovim whenever plugins.lua is modified
vim.cmd([[
  augroup lazy_user_config
    autocmd!
    autocmd BufWritePost plugins.lua source <afile> | PackerSync
  augroup end
]])

-- Use a protected call so we don't error out on first use
local status_ok, lazy = pcall(require, "lazy")
if not status_ok then
  return
end

local plugins = {
    -- GUI enhancements
    "Shatur/neovim-ayu",
    {
        "nvim-lualine/lualine.nvim",
        dependencies = {
            "kyazdani42/nvim-web-devicons",
        },
    },
    "tpope/vim-fugitive",
    "machakann/vim-highlightedyank",
    "psliwka/vim-smoothie",
    {
        "lewis6991/gitsigns.nvim",
        dependencies = {"nvim-lua/plenary.nvim"},
        config = function() require("gitsigns").setup() end,
    },
    {
        "kyazdani42/nvim-tree.lua",
        dependencies = {
            "kyazdani42/nvim-web-devicons",
        },
    },
    {
        "akinsho/bufferline.nvim",
        version = "v3.*",
        dependencies = {
            "kyazdani42/nvim-web-devicons",
            -- Delete buffers and close files in Vim without closing your windows or messing up your layout.
            "moll/vim-bbye",
        },
    },
    "akinsho/toggleterm.nvim",

    -- Projects
    "airblade/vim-rooter",
    "vim-scripts/localvimrc",

    -- Navigation
    "justinmk/vim-sneak",
    {
        "junegunn/fzf",
        build = function()
            vim.fn['fzf#install']()
        end,
        alias = "fzf",
        dependencies = {
            "junegunn/fzf.vim"
        },
    },

    {
        "VonHeikemen/lsp-zero.nvim",
        dependencies = {
            -- LSP
            { 'neovim/nvim-lspconfig' },
            { 'williamboman/mason-lspconfig.nvim' },
            { 'williamboman/mason.nvim' },

            -- Completion
            { 'hrsh7th/cmp-buffer' },
            { 'hrsh7th/cmp-nvim-lsp' },
            { 'hrsh7th/cmp-nvim-lua' },
            { 'hrsh7th/cmp-path' },
            { "hrsh7th/cmp-cmdline" },
            { 'hrsh7th/nvim-cmp' },
            { 'saadparwaiz1/cmp_luasnip' },

            -- Snippets
            { 'L3MON4D3/LuaSnip' },
            { 'rafamadriz/friendly-snippets' },
            { "saadparwaiz1/cmp_luasnip", dependencies = "LuaSnip" },
        },
    },
    -- Misc
    "windwp/nvim-autopairs",

    -- Telescope
    "nvim-telescope/telescope.nvim",
    {{- if eq .chezmoi.os "linux" }}
    {
        "nvim-telescope/telescope-media-files.nvim",
        dependencies = {
            "nvim-telescope/telescope.nvim",
            "nvim-lua/popup.nvim",
            "nvim-lua/plenary.nvim",
        },
    },
    {{ end }}

    -- Treesitter
    {"nvim-treesitter/nvim-treesitter", build = ":TSUpdate"},
}

local opts = {}
lazy.setup({plugins, opts})

return packer

